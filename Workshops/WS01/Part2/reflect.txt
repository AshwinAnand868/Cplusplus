Name - Ashwin Anand
Seneca email - aanand24@myseneca.ca
Student id -152042206
Date of creation - 13 September 2021

I have done all the coding by myself and only copied the code that my professor provided to complete my workshops and assignments.
                                                      Reflection Part

This was my first c++ programming workshop and in this I implemented whatever I learned through the notes provided. First and Foremost, I divided the application given into various modules and write functions in them as associated with the functionlity of each file to achieve modularity in my solution which is one of the most important parts for organising the code. I also achieved abstraction, through functions provided, in which only the important details are shown and less important ones are hidden. I learned some basics information about iostream header file, namespace std, cin and cout objects. I also  defined a sdds namespace which encapsulates all the code of my workshop. Moreover, One-defintion rule is also followed, that is I defined variables or functions only once within a same block. I also compiled each and every module after seperating them from the given workshop c++ file for the purpose of testing. Using safegaurd was also very interesting as it does not include header if it is already included. I use bool type first time in my coding in the function as in the C language it was not present. Lastly, I got the understanding of when to use extern keyword. Actually, I was unable to implement the DIY part for a seperate file for modularity at first as I was unable to use the machine array declaration outside of a file in which it is declared that is this variable has only file scope and that was in drink.cpp file only. However, then I learnt about extern keyword in the lecture and due to this keyword, I was able to make the file.cpp and file.h make work accurately as required by the application. I wrote this line -> extern Drink machine[MAXDRINKS] in file.h and included this file in drink.cpp and file.cpp, which makes the compiler understand that machine variable which is used in file.cpp exists in some other file that is it is external variable.  These were the fundamental things that I learned from this workshop.